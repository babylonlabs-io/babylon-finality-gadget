// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.3
// source: proto/finalitygadget.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	FinalityGadget_Ping_FullMethodName                   = "/proto.FinalityGadget/Ping"
	FinalityGadget_InsertBlock_FullMethodName            = "/proto.FinalityGadget/InsertBlock"
	FinalityGadget_GetBlockStatusByHeight_FullMethodName = "/proto.FinalityGadget/GetBlockStatusByHeight"
	FinalityGadget_GetBlockStatusByHash_FullMethodName   = "/proto.FinalityGadget/GetBlockStatusByHash"
	FinalityGadget_GetLatestBlock_FullMethodName         = "/proto.FinalityGadget/GetLatestBlock"
)

// FinalityGadgetClient is the client API for FinalityGadget service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FinalityGadgetClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// InsertBlock inserts a new block into the finality gadget db
	InsertBlock(ctx context.Context, in *BlockInfo, opts ...grpc.CallOption) (*InsertBlockResponse, error)
	// GetBlockStatusByHeight returns the finality status of a block at given
	// height
	GetBlockStatusByHeight(ctx context.Context, in *GetBlockStatusByHeightRequest, opts ...grpc.CallOption) (*GetBlockStatusResponse, error)
	// GetBlockStatusByHash returns the finality status of a block with given hash
	GetBlockStatusByHash(ctx context.Context, in *GetBlockStatusByHashRequest, opts ...grpc.CallOption) (*GetBlockStatusResponse, error)
	// GetLatestBlock returns the latest consecutively finalized block
	GetLatestBlock(ctx context.Context, in *GetLatestBlockRequest, opts ...grpc.CallOption) (*BlockInfo, error)
}

type finalityGadgetClient struct {
	cc grpc.ClientConnInterface
}

func NewFinalityGadgetClient(cc grpc.ClientConnInterface) FinalityGadgetClient {
	return &finalityGadgetClient{cc}
}

func (c *finalityGadgetClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, FinalityGadget_Ping_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *finalityGadgetClient) InsertBlock(ctx context.Context, in *BlockInfo, opts ...grpc.CallOption) (*InsertBlockResponse, error) {
	out := new(InsertBlockResponse)
	err := c.cc.Invoke(ctx, FinalityGadget_InsertBlock_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *finalityGadgetClient) GetBlockStatusByHeight(ctx context.Context, in *GetBlockStatusByHeightRequest, opts ...grpc.CallOption) (*GetBlockStatusResponse, error) {
	out := new(GetBlockStatusResponse)
	err := c.cc.Invoke(ctx, FinalityGadget_GetBlockStatusByHeight_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *finalityGadgetClient) GetBlockStatusByHash(ctx context.Context, in *GetBlockStatusByHashRequest, opts ...grpc.CallOption) (*GetBlockStatusResponse, error) {
	out := new(GetBlockStatusResponse)
	err := c.cc.Invoke(ctx, FinalityGadget_GetBlockStatusByHash_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *finalityGadgetClient) GetLatestBlock(ctx context.Context, in *GetLatestBlockRequest, opts ...grpc.CallOption) (*BlockInfo, error) {
	out := new(BlockInfo)
	err := c.cc.Invoke(ctx, FinalityGadget_GetLatestBlock_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FinalityGadgetServer is the server API for FinalityGadget service.
// All implementations must embed UnimplementedFinalityGadgetServer
// for forward compatibility
type FinalityGadgetServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// InsertBlock inserts a new block into the finality gadget db
	InsertBlock(context.Context, *BlockInfo) (*InsertBlockResponse, error)
	// GetBlockStatusByHeight returns the finality status of a block at given
	// height
	GetBlockStatusByHeight(context.Context, *GetBlockStatusByHeightRequest) (*GetBlockStatusResponse, error)
	// GetBlockStatusByHash returns the finality status of a block with given hash
	GetBlockStatusByHash(context.Context, *GetBlockStatusByHashRequest) (*GetBlockStatusResponse, error)
	// GetLatestBlock returns the latest consecutively finalized block
	GetLatestBlock(context.Context, *GetLatestBlockRequest) (*BlockInfo, error)
	mustEmbedUnimplementedFinalityGadgetServer()
}

// UnimplementedFinalityGadgetServer must be embedded to have forward compatible implementations.
type UnimplementedFinalityGadgetServer struct {
}

func (UnimplementedFinalityGadgetServer) Ping(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (UnimplementedFinalityGadgetServer) InsertBlock(context.Context, *BlockInfo) (*InsertBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertBlock not implemented")
}
func (UnimplementedFinalityGadgetServer) GetBlockStatusByHeight(context.Context, *GetBlockStatusByHeightRequest) (*GetBlockStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockStatusByHeight not implemented")
}
func (UnimplementedFinalityGadgetServer) GetBlockStatusByHash(context.Context, *GetBlockStatusByHashRequest) (*GetBlockStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockStatusByHash not implemented")
}
func (UnimplementedFinalityGadgetServer) GetLatestBlock(context.Context, *GetLatestBlockRequest) (*BlockInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestBlock not implemented")
}
func (UnimplementedFinalityGadgetServer) mustEmbedUnimplementedFinalityGadgetServer() {}

// UnsafeFinalityGadgetServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FinalityGadgetServer will
// result in compilation errors.
type UnsafeFinalityGadgetServer interface {
	mustEmbedUnimplementedFinalityGadgetServer()
}

func RegisterFinalityGadgetServer(s grpc.ServiceRegistrar, srv FinalityGadgetServer) {
	s.RegisterService(&FinalityGadget_ServiceDesc, srv)
}

func _FinalityGadget_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinalityGadgetServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinalityGadget_Ping_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinalityGadgetServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinalityGadget_InsertBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinalityGadgetServer).InsertBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinalityGadget_InsertBlock_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinalityGadgetServer).InsertBlock(ctx, req.(*BlockInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinalityGadget_GetBlockStatusByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockStatusByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinalityGadgetServer).GetBlockStatusByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinalityGadget_GetBlockStatusByHeight_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinalityGadgetServer).GetBlockStatusByHeight(ctx, req.(*GetBlockStatusByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinalityGadget_GetBlockStatusByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockStatusByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinalityGadgetServer).GetBlockStatusByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinalityGadget_GetBlockStatusByHash_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinalityGadgetServer).GetBlockStatusByHash(ctx, req.(*GetBlockStatusByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinalityGadget_GetLatestBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLatestBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinalityGadgetServer).GetLatestBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinalityGadget_GetLatestBlock_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinalityGadgetServer).GetLatestBlock(ctx, req.(*GetLatestBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FinalityGadget_ServiceDesc is the grpc.ServiceDesc for FinalityGadget service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FinalityGadget_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FinalityGadget",
	HandlerType: (*FinalityGadgetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _FinalityGadget_Ping_Handler,
		},
		{
			MethodName: "InsertBlock",
			Handler:    _FinalityGadget_InsertBlock_Handler,
		},
		{
			MethodName: "GetBlockStatusByHeight",
			Handler:    _FinalityGadget_GetBlockStatusByHeight_Handler,
		},
		{
			MethodName: "GetBlockStatusByHash",
			Handler:    _FinalityGadget_GetBlockStatusByHash_Handler,
		},
		{
			MethodName: "GetLatestBlock",
			Handler:    _FinalityGadget_GetLatestBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/finalitygadget.proto",
}
