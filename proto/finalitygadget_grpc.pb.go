// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.3
// source: proto/finalitygadget.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	FinalityGadget_QueryIsBlockFinalizedByHeight_FullMethodName = "/proto.FinalityGadget/QueryIsBlockFinalizedByHeight"
	FinalityGadget_QueryIsBlockFinalizedByHash_FullMethodName   = "/proto.FinalityGadget/QueryIsBlockFinalizedByHash"
	FinalityGadget_QueryLatestFinalizedBlock_FullMethodName     = "/proto.FinalityGadget/QueryLatestFinalizedBlock"
)

// FinalityGadgetClient is the client API for FinalityGadget service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FinalityGadgetClient interface {
	// QueryIsBlockFinalizedByHeight returns the finality status of a block at
	// given height
	QueryIsBlockFinalizedByHeight(ctx context.Context, in *QueryIsBlockFinalizedByHeightRequest, opts ...grpc.CallOption) (*QueryIsBlockFinalizedResponse, error)
	// QueryIsBlockFinalizedByHash returns the finality status of a block with
	// given hash
	QueryIsBlockFinalizedByHash(ctx context.Context, in *QueryIsBlockFinalizedByHashRequest, opts ...grpc.CallOption) (*QueryIsBlockFinalizedResponse, error)
	// QueryLatestFinalizedBlock returns the latest consecutively finalized block
	QueryLatestFinalizedBlock(ctx context.Context, in *QueryLatestFinalizedBlockRequest, opts ...grpc.CallOption) (*QueryBlockResponse, error)
}

type finalityGadgetClient struct {
	cc grpc.ClientConnInterface
}

func NewFinalityGadgetClient(cc grpc.ClientConnInterface) FinalityGadgetClient {
	return &finalityGadgetClient{cc}
}

func (c *finalityGadgetClient) QueryIsBlockFinalizedByHeight(ctx context.Context, in *QueryIsBlockFinalizedByHeightRequest, opts ...grpc.CallOption) (*QueryIsBlockFinalizedResponse, error) {
	out := new(QueryIsBlockFinalizedResponse)
	err := c.cc.Invoke(ctx, FinalityGadget_QueryIsBlockFinalizedByHeight_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *finalityGadgetClient) QueryIsBlockFinalizedByHash(ctx context.Context, in *QueryIsBlockFinalizedByHashRequest, opts ...grpc.CallOption) (*QueryIsBlockFinalizedResponse, error) {
	out := new(QueryIsBlockFinalizedResponse)
	err := c.cc.Invoke(ctx, FinalityGadget_QueryIsBlockFinalizedByHash_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *finalityGadgetClient) QueryLatestFinalizedBlock(ctx context.Context, in *QueryLatestFinalizedBlockRequest, opts ...grpc.CallOption) (*QueryBlockResponse, error) {
	out := new(QueryBlockResponse)
	err := c.cc.Invoke(ctx, FinalityGadget_QueryLatestFinalizedBlock_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FinalityGadgetServer is the server API for FinalityGadget service.
// All implementations must embed UnimplementedFinalityGadgetServer
// for forward compatibility
type FinalityGadgetServer interface {
	// QueryIsBlockFinalizedByHeight returns the finality status of a block at
	// given height
	QueryIsBlockFinalizedByHeight(context.Context, *QueryIsBlockFinalizedByHeightRequest) (*QueryIsBlockFinalizedResponse, error)
	// QueryIsBlockFinalizedByHash returns the finality status of a block with
	// given hash
	QueryIsBlockFinalizedByHash(context.Context, *QueryIsBlockFinalizedByHashRequest) (*QueryIsBlockFinalizedResponse, error)
	// QueryLatestFinalizedBlock returns the latest consecutively finalized block
	QueryLatestFinalizedBlock(context.Context, *QueryLatestFinalizedBlockRequest) (*QueryBlockResponse, error)
	mustEmbedUnimplementedFinalityGadgetServer()
}

// UnimplementedFinalityGadgetServer must be embedded to have forward compatible implementations.
type UnimplementedFinalityGadgetServer struct {
}

func (UnimplementedFinalityGadgetServer) QueryIsBlockFinalizedByHeight(context.Context, *QueryIsBlockFinalizedByHeightRequest) (*QueryIsBlockFinalizedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryIsBlockFinalizedByHeight not implemented")
}
func (UnimplementedFinalityGadgetServer) QueryIsBlockFinalizedByHash(context.Context, *QueryIsBlockFinalizedByHashRequest) (*QueryIsBlockFinalizedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryIsBlockFinalizedByHash not implemented")
}
func (UnimplementedFinalityGadgetServer) QueryLatestFinalizedBlock(context.Context, *QueryLatestFinalizedBlockRequest) (*QueryBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryLatestFinalizedBlock not implemented")
}
func (UnimplementedFinalityGadgetServer) mustEmbedUnimplementedFinalityGadgetServer() {}

// UnsafeFinalityGadgetServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FinalityGadgetServer will
// result in compilation errors.
type UnsafeFinalityGadgetServer interface {
	mustEmbedUnimplementedFinalityGadgetServer()
}

func RegisterFinalityGadgetServer(s grpc.ServiceRegistrar, srv FinalityGadgetServer) {
	s.RegisterService(&FinalityGadget_ServiceDesc, srv)
}

func _FinalityGadget_QueryIsBlockFinalizedByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryIsBlockFinalizedByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinalityGadgetServer).QueryIsBlockFinalizedByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinalityGadget_QueryIsBlockFinalizedByHeight_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinalityGadgetServer).QueryIsBlockFinalizedByHeight(ctx, req.(*QueryIsBlockFinalizedByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinalityGadget_QueryIsBlockFinalizedByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryIsBlockFinalizedByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinalityGadgetServer).QueryIsBlockFinalizedByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinalityGadget_QueryIsBlockFinalizedByHash_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinalityGadgetServer).QueryIsBlockFinalizedByHash(ctx, req.(*QueryIsBlockFinalizedByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinalityGadget_QueryLatestFinalizedBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryLatestFinalizedBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinalityGadgetServer).QueryLatestFinalizedBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinalityGadget_QueryLatestFinalizedBlock_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinalityGadgetServer).QueryLatestFinalizedBlock(ctx, req.(*QueryLatestFinalizedBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FinalityGadget_ServiceDesc is the grpc.ServiceDesc for FinalityGadget service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FinalityGadget_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FinalityGadget",
	HandlerType: (*FinalityGadgetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryIsBlockFinalizedByHeight",
			Handler:    _FinalityGadget_QueryIsBlockFinalizedByHeight_Handler,
		},
		{
			MethodName: "QueryIsBlockFinalizedByHash",
			Handler:    _FinalityGadget_QueryIsBlockFinalizedByHash_Handler,
		},
		{
			MethodName: "QueryLatestFinalizedBlock",
			Handler:    _FinalityGadget_QueryLatestFinalizedBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/finalitygadget.proto",
}
